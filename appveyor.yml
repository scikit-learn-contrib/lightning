# AppVeyor.com is a Continuous Integration service to build and run tests under
# Windows
# https://ci.appveyor.com/project/fabianp/lightning-bpc6r

image: Visual Studio 2019

# Not a .NET project, we build scikit-learn in the install step instead
build: false

environment:
  matrix:
    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6.8"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.8"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python37"
      PYTHON_VERSION: "3.7.5"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7.5"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python38"
      PYTHON_VERSION: "3.8.7"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python38-x64"
      PYTHON_VERSION: "3.8.7"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python39"
      PYTHON_VERSION: "3.9.1"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python39-x64"
      PYTHON_VERSION: "3.9.1"
      PYTHON_ARCH: "64"


install:
  # Miniconda is pre-installed in the worker build
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PYTHON%\\Library\\mingw-w64\\bin;%PYTHON%\\Library\\bin;%PYTHON%\\Library\\usr\\bin;%PATH%"
  - "python -m pip install -U pip"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - "python -m pip --version"

  - "python -m pip install --timeout=60 numpy scipy cython pytest scikit-learn wheel six joblib"
  - "python setup.py bdist_wheel bdist_wininst"

  - ps: "ls dist"
  # Install the generated wheel package to test it
  - "python -m pip install --pre --no-index --find-links dist/ sklearn-contrib-lightning"

test_script:
  - "python -m pytest -v --pyargs lightning"

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: dist\*
