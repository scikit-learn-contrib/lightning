name: Package tests

on:
  push:
    branches:
      - github_actions
  pull_request:
    branches:
      - master

jobs:
  test:
    name: ${{ matrix.os }}, Python ${{ matrix.python_version }} (${{ matrix.python_arch }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python_version:
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
        python_arch:
          - x64
        include:
          - os: windows-latest
            python_version: '3.6'
            python_arch: x86
          - os: windows-latest
            python_version: '3.7'
            python_arch: x86
          - os: windows-latest
            python_version: '3.8'
            python_arch: x86
          - os: windows-latest
            python_version: '3.9'
            python_arch: x86
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 3
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
          architecture: ${{ matrix.python_arch }}
      - name: Check Python version
        shell: python
        run: |
          import struct
          import sys

          assert sys.version_info[:2] == tuple(map(int, "${{ matrix.python_version }}".split(".")))
          assert f"x{struct.calcsize('P') * 8}".replace("32", "87") == "${{ matrix.python_arch }}"
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_build.txt -r requirements_test.txt
          python setup.py build
          python setup.py install
      - name: Run tests
        run: pytest -v --pyargs lightning
